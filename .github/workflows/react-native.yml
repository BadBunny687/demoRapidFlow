name: Build React Native Expo App

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Ensure Expo project exists
        run: |
          if [ ! -f "package.json" ]; then
            echo "⚠️ No package.json found, creating a new Expo app..."
            npx create-expo-app@latest . --yes
          else
            echo "✅ Found package.json, using existing project."
          fi

      - name: Install dependencies
        run: npm install -g expo-cli @expo/ngrok && npm install

      - name: Start Expo app with tunnel
  env:
    EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
    CI: 1
  run: |
    set -o pipefail

    # Preinstall ngrok so Expo can use tunnels without prompting
    npm install -g @expo/ngrok

    # Start the tunnel dev server
    npx expo start --tunnel > expo_output.txt 2>&1 &

    # Give it time to boot and produce the URL
    sleep 60

    echo "---- EXPO OUTPUT (tail) ----"
    tail -n 200 expo_output.txt || true

    # Extract a URL
    URL=$(grep -Eo 'exp://[^[:space:]]*' expo_output.txt | head -n1 || true)
    if [ -z "$URL" ]; then
      URL=$(grep -Eo 'https://expo.dev/[^[:space:]]*' expo_output.txt | head -n1 || true)
    fi

    if [ -z "$URL" ]; then
      echo '{"url":null}' > expo_output.json
      echo "No expo URL found"
    else
      printf '{"url":"%s"}' "$URL" > expo_output.json
      echo "FOUND_EXPO_URL=$URL"
    fi


      - name: Upload Expo output artifacts
        uses: actions/upload-artifact@v4
        with:
          name: expo-output
          path: |
            expo_output.json
            expo_output.txt
